package newPackage;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.UnhandledAlertException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.Select;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.Test;

public class TestClass extends BaseClass{

	
	@Test
	public void eggtimer() throws InterruptedException { 

		driver.get("http://e.ggtimer.com/");
		//driver.manage().window().maximize();
		Thread.sleep(3000);
		
		WebElementClass webelement = new WebElementClass();
		
		int timeinSecs=25;
		String before=null;
		String after=null;
		int counter=0;
		// Enter time
		webelement.setText(driver, "//*[@id=\"EggTimer-start-time-input-text\"]", String.valueOf(timeinSecs));
		Thread.sleep(1000);
		
		// Click Start
		webelement.clickButton(driver, "//*[@data-for=\"startpage\"]");
		
			long t1=System.currentTimeMillis();
			long t2;
			while(true) {
			//for (int i=1; i<=timeinSecs;i++) {
			//counter = Integer.parseInt(driver.findElement(By.xpath("//*[@Class=\"ClassicTimer-time\"]/span")).getText().replace(" seconds", "").replace(" second", ""));
			after=driver.findElement(By.xpath("//*[@Class=\"ClassicTimer-time\"]/span")).getText().replace(" seconds", "").replace(" second", "");
			System.out.println(before);
			System.out.println(after);
			if (!after.equals(before)) {
				before=after;
				t2=System.currentTimeMillis();
				System.out.println(t2);
				System.out.println(t1);
				System.out.println(t2-t1);
				//Assert.assertEquals(Math.round((t2-t1)/1000),1);
				System.out.println(after);
			}
			
			if (Integer.parseInt(after) == 0) {
		    	driver.switchTo().alert().accept();
		    	break;
			}
			//System.out.println(driver.findElement(By.xpath("//*[@class=\"ClassicTimer-time\"]/span")).getText() + "   " + (timeinSecs-counter));
			//Assert.assertEquals((timeinSecs-counter),i);
			//Thread.sleep(974);	
		    //if (counter == 0) {
		    //	driver.switchTo().alert().accept();
		    //	break;
			//}
		//}
			}
	}
	
	@AfterMethod
	public void close() throws InterruptedException {
		Thread.sleep(3000);
		driver.close();
	}
}
